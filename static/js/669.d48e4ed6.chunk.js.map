{"version":3,"file":"static/js/669.d48e4ed6.chunk.js","mappings":"sRAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAsB,WACjC,OAAOF,EAAAA,GAAAA,IAAA,oBACR,EAEYG,EAAiB,SAAAC,GAC5B,OAAOJ,EAAAA,GAAAA,IAAA,iBAAoBI,GAC5B,EAEYC,EAAqB,SAAAD,GAChC,OAAOJ,EAAAA,GAAAA,IAAA,iBAAoBI,EAApB,YACR,EAEYE,EAAwB,SAAAF,GACnC,OAAOJ,EAAAA,GAAAA,IAAA,iBAAoBI,EAApB,aACR,EAEYG,EAAa,SAAAC,GACxB,OAAOR,EAAAA,GAAAA,IAAA,8BAAiCQ,GACzC,C,6ECvBYC,EAAS,WACpB,OACE,+BACE,gBAAKC,MAAO,CAAEC,WAAY,OAAQC,YAAa,QAA/C,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,OAKlB,C,wKCbYC,EAAW,SAAC,GACvB,OADoC,EAAXC,KACbC,KAAI,YAA4C,IAAzClB,EAAwC,EAAxCA,GAAImB,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACtC,OACE,UAACC,EAAA,EAAD,CAAcC,GAAI,EAAlB,WACE,gBACEC,IACEH,EAVc,kCAUqBA,EAR7C,oEAUQX,MAAM,MACNe,IAAI,MAEN,uBAAIL,KACJ,uCAAeD,OATPnB,EAYb,GACF,ECeD,EA7Ba,WACX,OAAwB0B,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEQ7B,GAAO8B,EAAAA,EAAAA,MAAP9B,GAiBR,OAhBA+B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,WAAMhC,GAAN,uFAEhB6B,GAAa,GAFG,UAGE5B,EAAAA,EAAAA,IAAmBgC,OAAOjC,IAH5B,OAGVkC,EAHU,OAIhBP,EAAQO,EAAIC,KAAKlB,MAJD,gDAOhBmB,QAAQC,IAAI,KAAMC,SAPF,yBAShBT,GAAa,GATG,4EAAH,sDAYjBG,EAAYhC,EACb,GAAE,CAACA,KAGF,UAACsB,EAAA,EAAD,WACGM,IAAa,SAACvB,EAAA,EAAD,IACbY,EAAKsB,OAAS,IAAK,SAACvB,EAAD,CAAUC,KAAMA,MAGzC,C","sources":["components/Api/fetchData.jsx","components/Loader/Loader.jsx","components/MovieDetails/Cast/CastCard.jsx","components/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '368aa8eefea213f2e59844c75600bcb3',\n};\n\nexport const fetchTrendingMovies = () => {\n  return axios.get(`/trending/all/day`);\n};\n\nexport const fetchMovieById = id => {\n  return axios.get(`/movie/${id}`);\n};\n\nexport const fetchMovieCastById = id => {\n  return axios.get(`/movie/${id}/credits`);\n};\n\nexport const fetchMovieReviewsById = id => {\n  return axios.get(`/movie/${id}/reviews?`);\n};\n\nexport const fetchQuery = query => {\n  return axios.get(`/search/movie?query=${query}`);\n};\n","import { Bars } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <div style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n        <Bars\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"bars-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      </div>\n    </>\n  );\n};\n","import { Box } from 'components/Box/Box';\nconst BASE_PICTURE_PATH = 'https://image.tmdb.org/t/p/w500';\nconst DUMMY_IMAGE_100 =\n  'https://dummyimage.com/100x150/ddd/000000&text=no+image+available';\n\nexport const CastCard = ({ cast }) => {\n  return cast.map(({ id, character, name, profile_path }) => {\n    return (\n      <Box key={id} ml={5}>\n        <img\n          src={\n            profile_path ? BASE_PICTURE_PATH + profile_path : DUMMY_IMAGE_100\n          }\n          width=\"150\"\n          alt=\"\"\n        />\n        <p>{name}</p>\n        <p>Character: {character}</p>\n      </Box>\n    );\n  });\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Box } from 'components/Box/Box';\nimport { fetchMovieCastById } from 'components/Api/fetchData';\nimport { Loader } from 'components/Loader/Loader';\nimport { CastCard } from './CastCard';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { id } = useParams();\n  useEffect(() => {\n    const getCastById = async id => {\n      try {\n        setIsLoading(true);\n        const res = await fetchMovieCastById(Number(id));\n        setCast(res.data.cast);\n        //console.log(res.data.cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCastById(id);\n  }, [id]);\n\n  return (\n    <Box>\n      {isLoading && <Loader />}\n      {cast.length > 0 && <CastCard cast={cast} />}\n    </Box>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","api_key","fetchTrendingMovies","fetchMovieById","id","fetchMovieCastById","fetchMovieReviewsById","fetchQuery","query","Loader","style","marginLeft","marginRight","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","CastCard","cast","map","character","name","profile_path","Box","ml","src","alt","useState","setCast","isLoading","setIsLoading","useParams","useEffect","getCastById","Number","res","data","console","log","message","length"],"sourceRoot":""}