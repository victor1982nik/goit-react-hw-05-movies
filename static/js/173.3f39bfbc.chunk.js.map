{"version":3,"file":"static/js/173.3f39bfbc.chunk.js","mappings":"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","sources":["components/Api/fetchData.jsx","components/Loader/Loader.jsx","components/BackLink/BackLink.jsx","components/MovieDetails/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '368aa8eefea213f2e59844c75600bcb3',\n};\n\nexport const fetchTrendingMovies = () => {\n  return axios.get(`/trending/all/day`);\n};\n\nexport const fetchMovieById = id => {\n  return axios.get(`/movie/${id}`);\n};\n\nexport const fetchMovieCastById = id => {\n  return axios.get(`/movie/${id}/credits`);\n};\n\nexport const fetchMovieReviewsById = id => {\n  return axios.get(`/movie/${id}/reviews?`);\n};\n\nexport const fetchQuery = query => {\n  return axios.get(`/search/movie?query=${query}`);\n};\n","import { Bars } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <div style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n        <Bars\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"bars-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      </div>\n    </>\n  );\n};\n","import { BiArrowBack } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BiArrowBack />\n      {children}\n    </StyledLink>\n  );\n};\n","import { BackLink } from 'components/BackLink/BackLink';\nimport { Box } from 'components/Box/Box';\n//import { useLocation } from 'react-router-dom';\nconst BASE_PICTURE_PATH = 'https://image.tmdb.org/t/p/w500';\nconst DUMMY_IMAGE =\n  'https://dummyimage.com/250x325/ddd/000000&text=no+image+available';\n\nexport const MovieCard = ({ movie, location }) => {\n  //const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  //console.log('location', location);\n\n  const {\n    poster_path,\n    backdrop_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n  const picture =\n    poster_path || backdrop_path\n      ? BASE_PICTURE_PATH + (poster_path || backdrop_path)\n      : DUMMY_IMAGE;\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Back to Movies</BackLink>\n      <Box display=\"flex\" borderBottom=\"normal\" pb={3}>\n        <img src={picture} alt=\"\" width=\"250\" height=\"325\" />\n        <Box pl={4}>\n          <h2>{original_title}</h2>\n          <p>User score: {vote_average.toFixed(1) * 10}%</p>\n          <Box fontWeight=\"bold\">Overview</Box>\n          <p>{overview}</p>\n          <Box fontWeight=\"bold\">Genres</Box>\n          <p>{genres.map(genre => genre.name).join(' ')}</p>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'components/Api/fetchData';\nimport { Box } from 'components/Box/Box';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieCard } from 'components/MovieDetails/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  console.log('location', location);\n\n  const { id } = useParams();\n  useEffect(() => {\n    const getFilmById = async id => {\n      try {\n        setIsLoading(true);\n        const res = await fetchMovieById(Number(id));\n        setMovie(res.data);\n        // console.log(res.data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getFilmById(id);\n  }, [id]);\n\n  // debugger;\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {movie && (\n        <Box>\n          <MovieCard movie={movie} location={location} />\n          <Box display=\"flex\" flexDirection=\"column\">\n            <p>Additional information</p>\n            <ul>\n              <li><NavLink to=\"cast\" state={{from: location.state.from}}>Cast</NavLink></li>\n              <li><NavLink to=\"reviews\" state={{from: location.state.from}}>Reviews</NavLink></li>\n            </ul>\n          </Box>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </Box>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n//state={{from: location.state.from}}"],"names":["axios","api_key","fetchTrendingMovies","fetchMovieById","id","fetchMovieCastById","fetchMovieReviewsById","fetchQuery","query","Loader","style","marginLeft","marginRight","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","StyledLink","styled","Link","BackLink","to","children","MovieCard","movie","backLinkHref","location","state","from","poster_path","backdrop_path","original_title","vote_average","overview","genres","picture","Box","display","borderBottom","pb","src","alt","pl","toFixed","fontWeight","map","genre","name","join","useState","setMovie","isLoading","setIsLoading","useLocation","console","log","useParams","useEffect","getFilmById","Number","res","data","message","flexDirection","Suspense","fallback"],"sourceRoot":""}